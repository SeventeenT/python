# 算数运算符
a = 21
b = 10
c = 0
print("a+b =", a + b)  # 两个对象相加
print("a-b =", a - b)  # 相减
print("a*b =", a * b)  # 相乘
print("a/b =", a / b)  # 相除
print("a%b =", a % b)  # 取模-返回除法的余数

# 修改变量 a、b、c的值
a = 2
b = 3
c = 9
print("a**b =", a ** b)  # 幂-返回a的b次幂
print("c//2 = ", c // a)  # 取整除-返回商的整数部分

print("——" * 15)

# 比较运算符
aa = 21
bb = 10
print("aa == bb ? :", aa == bb)  # 等于
print("aa != bb ? :", aa != bb)  # 不等于
print("aa > bb ? :", aa > bb)  # 大于
print("aa < bb ? :", aa < bb)  # 小于
print("aa >= bb ? :", aa >= bb)  # 大于等于
print("aa <= bb ? :", aa <= bb)  # 小于等于

print("——" * 15)

# 赋值运算符
a = [9, 9, 9, 9, 9, 9, 9, 9]
b = [2, 2, 2, 2, 2, 2, 2, 2]
print("a + b :", a[0] + b[0])  # a+b
a[1] += b[1]
print("a += b :", a[1])  # a = a+b
a[2] -= b[2]
print("a -= b :", a[2])  # a = a-b
a[3] *= b[3]
print("a *= b :", a[3])  # a = a * b
a[4] /= b[4]
print("a /= b :", a[4])  # a = a / b
a[5] %= b[5]
print("a %= b :", a[5])  # a = a % b
a[6] **= b[6]
print("a **= b :", a[6])  # a = a ** b
a[7] //= b[7]
print("a //= b :", a[7])  # a = a // b

print("——" * 15)

# 位运算符
# &：按位与运算符：参与运算的两个值,如果两个相应位都为1,则该位的结果为1,否则为0
# |：按位或运算符：只要对应的二个二进位有一个为1时，结果位就为1。
# ^：按位异或运算符：当两对应的二进位相异时，结果为1
# ~：按位取反运算符：对数据的每个二进制位取反,即把1变为0,把0变为1。~x 类似于 -x-1( 在一个有符号二进制数的补码形式。)
# <<：左移动运算符：运算数的各二进位全部左移若干位，由"<<"右边的数指定移动的位数，高位丢弃，低位补0。
# >>：右移动运算符：把">>"左边的运算数的各二进位全部右移若干位，">>"右边的数指定移动的位数

z = 60  # 60 = 0011 1100
x = 13  # 13 = 0000 1101
print("z & x =", z & x)  # 0000 1100 = 12
print("z | x =", z | x)  # 0011 1101 = 61
print("z ^ x =", z ^ x)  # 0011 0001 = 49
'''
转换 -76 到二进制：
二进制的正76：0100 1100
反转所有位：1011 0011
添加1：1011 0100
'''
print("~z =", ~z)  # 1100 0011 = -61
print("z << 2 =", z << 2)  # 1111 0000 = 240
print("a >> 2 =", z >> 2)  # 0000 1111 = 15

print("——" * 15)

# 逻辑运算符
# and  布尔"与" - 如果两个操作数都为真，则条件成立。 如果 x 为 False，x and y 返回 False，否则它返回 y 的计算值。
# or   布尔"或" - 如果两个操作数中的任何一个非零，则条件成为真。  如果 x 是 True，它返回 x 的值，否则它返回 y 的计算值。
# not  布尔"非" - 用于反转操作数的逻辑状态。如果 x 为 True，返回 False 。如果 x 为 False，它返回 True。
# 非零为true
m = 0
n = 20
print("m and n =", m and n)
print("m or n =", m or n)
print("not m =", not m)

print("——" * 15)

# 成员运算符
# in 如果在指定的序列中找到值返回 True，否则返回 False。
# not in 如果在指定的序列中没有找到值返回 True，否则返回 False。
ab = 10
cd = 20
a_list = [1, 2, 3, 4, 5]
print("变量a在列表中：", a in a_list)
print("变量b不在列表中：", b not in a_list)

print("——" * 15)

# 身份运算符   身份运算符用于比较两个对象的存储单元
# is 是判断两个标识符是不是引用自一个对象
# is not 是判断两个标识符是不是引用自不同对象
'''注： id() 函数用于获取对象内存地址。'''
a1 = 20
a2 = 20
print("a1 is a2 : ", a1 is a2)
print("id(a1) == id(a2) : ", id(a1) == id(a2))
a3 = 30
print("a1 is a3 : ", a1 is a3)
print("a1 is not a3 : ", a1 is not a3)
'''is 用于判断两个变量引用对象是否为同一个， == 用于判断引用变量的值是否相等。'''

# 优先级运算
b1 = 20
b2 = 10
b3 = 15
b4 = 5
b5 = 0
print((b1 + b2) * b3 / b4)
print(((b1 + b2) * b3) / b4)
print((b1 + b2) * (b3 / b4))
print(b1 + (b2 * b3) / b4)
